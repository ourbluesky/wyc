<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DSIES;component/Resources/ButtonStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="TabsStyle" TargetType="{x:Type Button}" BasedOn="{ StaticResource Break_ButtonStyle}">
        <Setter Property="FontFamily" Value="/DSIES;component/Fonts/#AF TOMMY HILFIGER"/>
        <Setter Property="FontSize" Value="10.5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    
    <Style x:Key="TabsNormalStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TabsStyle}">
        <Setter Property="Foreground" Value="#ff666666"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TabsChosenStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TabsStyle}">
        <Setter Property="Foreground" Value="#ffffffff"/>
    </Style>


    <Style x:Key="BorderStyle" TargetType="{x:Type Border}" >
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>

    <Style x:Key="TabsBorder" BasedOn="{StaticResource BorderStyle}" TargetType="{x:Type Border}" >
        <Setter Property="BorderBrush" Value="White"/>
    </Style>



    <Style x:Key="SelectionNormalStyle" BasedOn="{StaticResource TabsNormalStyle}" TargetType="{x:Type Button}"/>
    <Style x:Key="SelectionChosenStyle" BasedOn="{StaticResource TabsStyle}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="SelectionBorderNormalStyle" TargetType="{x:Type Border}" BasedOn="{StaticResource BorderStyle}">
        <Setter Property="BorderBrush" Value="#ff666666"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="SelectionBorderChosenStyle" TargetType="{x:Type Border}" BasedOn="{StaticResource BorderStyle}">
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Background" Value="#ff666666"/>
    </Style>


    <Style x:Key="BoundaryLine" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="#ffb78eff"/>
    </Style>

    <Style x:Key="RealStateStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#ffaaaaaa"/>
        <Setter Property="FontFamily" Value="Monaco"/>
    </Style>
    <Style x:Key="RealStateBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="#ff666666"/>
    </Style>





  


    <Style x:Key="ListTextNormalStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFCCCCCC"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true"/>
        </Style.Triggers>
    </Style>
    <Style x:Key="ListTextChosenStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="TextDecorations" Value="Underline"/>
    </Style>


 




    <Style x:Key="DataGridHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Height" Value="30" />
        <Setter Property="Padding" Value="15,0,0,0" />
    </Style>


    <Style x:Key="ScenesGrid" TargetType="{x:Type DataGrid}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="660"/>
        <Setter Property="Height" Value="320"/>
        <Setter Property="Background" Value="{x:Null}"/>
    </Style>

    <Style x:Key="ScenesGridHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Width" Value="110"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="Background" Value="#ff111111"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="#ffeeeeee"/>
    </Style>

    <Style x:Key="ScenesGridCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="#ff342947"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="Height" Value="80"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="ComboBoxStyle">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="FocusedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <ControlTemplate.Resources>
                                        <Storyboard x:Key="HoverOn">
                                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BtnOver" Storyboard.TargetProperty="Opacity" To="0.8"/>
                                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Background_over" Storyboard.TargetProperty="Opacity" To="1"/>
                                        </Storyboard>
                                        <Storyboard x:Key="HoverOff">
                                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BtnOver" Storyboard.TargetProperty="Opacity" To="0"/>
                                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Background_over" Storyboard.TargetProperty="Opacity" To="0"/>
                                        </Storyboard>
                                        <Storyboard x:Key="PressedOn">
                                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BtnPress" Storyboard.TargetProperty="Opacity" To="0.8"/>
                                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Background_press" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BtnPress_highlight" Storyboard.TargetProperty="Opacity" To="1"/>
                                        </Storyboard>
                                        <Storyboard x:Key="PressedOff">
                                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BtnPress" Storyboard.TargetProperty="Opacity" To="0"/>
                                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="Background_press" Storyboard.TargetProperty="Opacity" To="0"/>
                                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BtnPress_highlight" Storyboard.TargetProperty="Opacity" To="0"/>
                                        </Storyboard>
                                    </ControlTemplate.Resources>
                                    <Grid>
                                        <Rectangle Fill="#ff222222" x:Name="Background" Stroke="#55ABAEB3" RadiusX="1" RadiusY="1" IsHitTestVisible="false" StrokeThickness="1">
                                        </Rectangle>
                                        <Rectangle x:Name="Background_over" Stroke="#FFABACAD" RadiusX="3" RadiusY="3" Opacity="0" IsHitTestVisible="False"/>
                                        <Rectangle x:Name="Background_press" Stroke="#FFABABAB" RadiusX="3" RadiusY="3" Opacity="0" IsHitTestVisible="False"/>
                                        <Border x:Name="BtnOver" Width="{TemplateBinding ActualWidth}" BorderBrush="#55cccccc" BorderThickness="1" CornerRadius="1" Opacity="0" HorizontalAlignment="Right">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#CC333333" Offset="0"/>
                                                    <GradientStop Color="#FF333333" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <Border x:Name="BtnPress" Width="{TemplateBinding ActualWidth}" BorderBrush="#55cccccc" BorderThickness="1" CornerRadius="1" Opacity="0" HorizontalAlignment="Right">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FF555555" Offset="0"/>
                                                    <GradientStop Color="#FF555555" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <Border x:Name="BtnPress_highlight" Margin="1" CornerRadius="1" Opacity="0" HorizontalAlignment="Right">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                    <GradientStop Color="#FF919191" Offset="0"/>
                                                    <GradientStop Color="#A5CED1D2" Offset="0.088"/>
                                                    <GradientStop Color="#0095D9FF" Offset="0.221"/>
                                                    <GradientStop Color="#0095D9FF" Offset="0.779"/>
                                                    <GradientStop Color="#A5CED1D2" Offset="0.912"/>
                                                    <GradientStop Color="#FF919191" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <Border x:Name="BtnOverlay" Margin="1" CornerRadius="2" HorizontalAlignment="Right">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#00FFFFFF"/>
                                                    <GradientStop Color="#72FFFFFF" Offset="0.189"/>
                                                    <GradientStop Color="#72FFFFFF" Offset="0.5"/>
                                                    <GradientStop Color="#00FFFFFF" Offset="0.51"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <Path x:Name="BtnArrow" Margin="0,0,7,0" Width="6" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Stretch="Uniform">
                                            <Path.Fill>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FF616368" Offset="0"/>
                                                    <GradientStop Color="#FF000000" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Rectangle x:Name="DisabledVisualElement" Margin="1" Fill="#00FFFFFF" RadiusX="3" RadiusY="3" IsHitTestVisible="false" Visibility="Collapsed"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Trigger.ExitActions>
                                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                                            </Trigger.ExitActions>
                                            <Trigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                            </Trigger.EnterActions>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true"/>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Trigger.ExitActions>
                                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
                                            </Trigger.ExitActions>
                                            <Trigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
                                            </Trigger.EnterActions>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                                            <Setter Property="Visibility" TargetName="DisabledVisualElement" Value="Visible"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter HorizontalAlignment="Left" Margin="10,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>
                        <TextBox Visibility="Hidden" HorizontalAlignment="Left" Margin="10,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}" Foreground="White">
                            <TextBox.Template>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#A5FFFFFF" RadiusX="4" RadiusY="4" IsHitTestVisible="false" Visibility="Collapsed"/>
                        <Rectangle x:Name="FocusVisualElement" Margin="-1" Stroke="#FFCECFD0" StrokeThickness="1" RadiusX="4" RadiusY="4" IsHitTestVisible="false" Opacity="0"/>
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder" Background="#FF333333" BorderThickness="0" CornerRadius="1,1,3,3">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFABAEB3" Offset="0"/>
                                            <GradientStop Color="#FFD4D7D9" Offset="0.355"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusedOff}" x:Name="FocusedOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusedOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="Visibility" TargetName="DisabledVisualElement" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                            <Setter Property="CornerRadius" Value="4" TargetName="DropDownBorder"/>
                            <Setter Property="Margin" Value="0,2,0,0" TargetName="DropDownBorder"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
                            <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity" To="0.73"/>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity" To="0"/>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0.84"/>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid SnapsToDevicePixels="true" FocusVisualStyle="{x:Null}">
                        <Rectangle x:Name="BackgroundGradientOver" FocusVisualStyle="{x:Null}" Stroke="#FF333333" RadiusX="2" RadiusY="2" Opacity="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#33E0E3E4" Offset="0.5"/>
                                    <GradientStop Color="#33C2C5C6" Offset="0.5"/>
                                    <GradientStop Color="#33B7BABC" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="BackgroundGradientSelected" FocusVisualStyle="{x:Null}" Stroke="#FF333333" RadiusX="2" RadiusY="2" Opacity="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#33FFFFFF" Offset="0"/>
                                    <GradientStop Color="#33EDEDED" Offset="0.171"/>
                                    <GradientStop Color="#33E7E7E7" Offset="0.5"/>
                                    <GradientStop Color="#33DCDCDC" Offset="0.51"/>
                                    <GradientStop Color="#33EAEBEC" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="BackgroundHighlight" FocusVisualStyle="{x:Null}" Margin="1" Stroke="#ff333333" RadiusX="1" RadiusY="1"/>
                        <ContentPresenter FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="contentPresenter" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" x:Name="HoverOn_BeginStoryboard"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true"/>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard1"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard1"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="ReportButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource NoDefaultBlue}">
        <Setter Property="Foreground" Value="#ff000000"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="White"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>-->
</ResourceDictionary>